import fs from 'node:fs/promises';
import path from 'node:path';
import outdent from 'outdent';
import { createElement } from 'react';
import { renderToStaticMarkup } from 'react-dom/server';
import shopHtmlTemplate from './shopHtmlTemplate.js';

const getEntryModule = (ctx) => {
  // const pluginsObject = ctx.plugins
  //   .map(({ name, importName }) => `'${name}': ${importName}`)
  //   .join(',\n');

  // const pluginsImport = ctx.plugins
  //   .map(({ importName, modulePath }) => `import ${importName} from '${modulePath}';`)
  //   .join('\n');

  return outdent`
        /**
         * Write static files by SHOP
         * Any modifications made will be discarded.
         */

        ${
          ctx.customisations?.modulePath
            ? `import ShopApp from '${ctx.customisations.modulePath}'`
            : ''
        }
                console.log("Wroten Static files: Hello Dolly");
      `;
};

const getDocumentHTML = ({ logger, props = {} }) => {
  const result = shopHtmlTemplate(props);

  return outdent`<!DOCTYPE html>${result}`;
};

const AUTO_GENERATED_WARNING = `
  Write Static files: shop.html
  Any modifications made will be discarded.`.trim();

const decorateHTMLWithAutoGeneratedWarning = (htmlTemplate) =>
  htmlTemplate.replace(/<head/, `\n<!--\n${AUTO_GENERATED_WARNING}\n-->\n<head`);

const writeStaticClientFiles = async (ctx, shopEntry) => {
  const prettier = await import('prettier'); // ESM-only

  await fs.mkdir(ctx.runtimeDir, { recursive: true });
  ctx.logger.debug('Created the runtime directory');

  const indexHtml = decorateHTMLWithAutoGeneratedWarning(
    getDocumentHTML({
      logger: ctx.logger,
      props:
        ctx.bundler === 'vite'
          ? {
            entryPath: `/${shopEntry}`,
          }
          : undefined,
    })
  );

  await fs.writeFile(
    path.join(ctx.runtimeDir, 'shop.html'),
    await prettier.format(indexHtml, {
      parser: 'html',
    })
  );
  ctx.logger.debug('Wrote the index.html file');
  await fs.writeFile(
    path.join(ctx.runtimeDir, 'shop.js'),
    await prettier.format(getEntryModule(ctx), {
      parser: 'babel',
    })
  );
  ctx.logger.debug('Wrote the app.js file');
};

export { writeStaticClientFiles, getDocumentHTML };
